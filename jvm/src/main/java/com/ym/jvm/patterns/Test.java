package com.ym.jvm.patterns;

/**
 * 设计模式应该遵循的原则：
 * 1.开闭原则：对修改关闭，对扩展开放
 * 2.迪米特法则：和自己的朋友直接对话，也就是说降低类之间的耦合性，最少知道原则
 * 3.里氏替换原则：确保超类中的方法在子类中仍然能够成立，也就是说尽量少的重写父类的方法
 * 4.依赖倒转原则：面向接口编程而不是面向实现编程
 * 5.接口隔离原则：尽量每个类拥有自己的专用接口
 * 6.单一原则：控制类的颗粒大小，尽量将对象解耦，提高内聚性
 * 7.合成复用原则：尽量先使用组合或者聚合的关系，其次才要考虑使用继承
 */
public class Test {
}
